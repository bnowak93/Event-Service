# Docker profile configuration
# This file contains settings specific to running in Docker containers

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/eventhub}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Eureka Service Discovery
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://discovery-server:8761/eureka/}
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${HOSTNAME:event-service}

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
app.kafka.topics.event-created=event-service.event.created
app.kafka.topics.event-updated=event-service.event.updated
app.kafka.topics.event-deleted=event-service.event.deleted

# Actuator Configuration (for Prometheus metrics)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Logging Configuration
logging.file.path=/var/log/eventhub
logging.file.name=${logging.file.path}/event-service.log
logging.level.com.eventhub=${LOGGING_LEVEL_COM_EVENTHUB:INFO}
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

# Application Info
spring.application.name=${SPRING_APPLICATION_NAME:event-service}
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/event-service

# JWT Configuration
application.security.jwt.secret-key=${JWT_SECRET_KEY:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
application.security.jwt.expiration=${JWT_EXPIRATION:86400000}
application.security.jwt.issuer=${JWT_ISSUER:eventhub}

# Server shutdown behavior
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=20s